apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "fence-agents-remediation.medik8s.io/v1alpha1",
          "kind": "FenceAgentsRemediation",
          "metadata": {
            "name": "worker-1"
          },
          "spec": {
            "agent": "fence_ipmilan",
            "nodeparameters": {
              "--ipport": {
                "master-0": "6230",
                "master-1": "6231",
                "master-2": "6232",
                "worker-0": "6233",
                "worker-1": "6234",
                "worker-2": "6235"
              }
            },
            "sharedparameters": {
              "--action": "reboot",
              "--ip": "192.168.111.1",
              "--lanplus": "",
              "--password": "password",
              "--username": "admin"
            }
          }
        },
        {
          "apiVersion": "fence-agents-remediation.medik8s.io/v1alpha1",
          "kind": "FenceAgentsRemediationTemplate",
          "metadata": {
            "name": "fenceagentsremediationtemplate-default"
          },
          "spec": {
            "template": {}
          }
        }
      ]
    capabilities: Basic Install
    categories: OpenShift Optional
    containerImage: ""
    createdAt: ""
    description: Fence Agents Remediation Operator for remediating nodes using upstream
      fence-agents.
    olm.skipRange: '>=0.0.1'
    operators.operatorframework.io/builder: operator-sdk-v1.30.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/medik8s/fence-agents-remediation
    support: Medik8s
  name: fence-agents-remediation.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: FenceAgentsRemediation is the Schema for the fenceagentsremediations
        API
      displayName: Fence Agents Remediation
      kind: FenceAgentsRemediation
      name: fenceagentsremediations.fence-agents-remediation.medik8s.io
      resources:
      - kind: FenceAgentsRemediation
        name: fenceagentsremediations
        version: v1alpha1
      specDescriptors:
      - description: Agent is the name of fence agent that will be used
        displayName: Agent
        path: agent
      - description: NodeParameters are passed to the fencing agent according to the
          node that is fenced, since they are node specific
        displayName: Node Parameters
        path: nodeparameters
      - description: SharedParameters are passed to the fencing agent regardless of
          which node is about to be fenced (i.e., they are common for all the nodes)
        displayName: Shared Parameters
        path: sharedparameters
      statusDescriptors:
      - description: 'Represents the observations of a FenceAgentsRemediation''s current
          state. Known .status.conditions.type are: "Processing", "FenceAgentActionSucceeded",
          and "Succeeded".'
        displayName: conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      - description: LastUpdateTime is the last time the status was updated.
        displayName: Last Update Time
        path: lastUpdateTime
      version: v1alpha1
    - description: FenceAgentsRemediationTemplate is the Schema for the fenceagentsremediationtemplates
        API
      displayName: Fence Agents Remediation Template
      kind: FenceAgentsRemediationTemplate
      name: fenceagentsremediationtemplates.fence-agents-remediation.medik8s.io
      resources:
      - kind: FenceAgentsRemediationTemplate
        name: fenceagentsremediationtemplates
        version: v1alpha1
      specDescriptors:
      - description: Template defines the desired state of FenceAgentsRemediationTemplate
        displayName: Template
        path: template
      - description: Agent is the name of fence agent that will be used
        displayName: Agent
        path: template.spec.agent
      - description: NodeParameters are passed to the fencing agent according to the
          node that is fenced, since they are node specific
        displayName: Node Parameters
        path: template.spec.nodeparameters
      - description: SharedParameters are passed to the fencing agent regardless of
          which node is about to be fenced (i.e., they are common for all the nodes)
        displayName: Shared Parameters
        path: template.spec.sharedparameters
      version: v1alpha1
  description: "Fence Agents Remediation Operator (FAR)\n\nThe operator will remediate/fence
    a node when a FenceAgentsRemediation (far) custom resource exists with the node's
    name.\nFAR uses an existing set of upstream fencing agents for environments with
    a \ntraditional API end-point (e.g., IPMI) for power cycling cluster nodes.\n\nThe
    operator is recommended to be used with Node Healthcheck Operator for easier and
    smoother experience,\nbut it can also work as a standalonde remediator for the
    more advanced user.\n"
  displayName: Fence Agents Remediation Operator
  icon:
  - base64data: base64EncodedIcon
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - delete
          - deletecollection
          - get
          - list
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods/exec
          verbs:
          - create
        - apiGroups:
          - fence-agents-remediation.medik8s.io
          resources:
          - fenceagentsremediations
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - fence-agents-remediation.medik8s.io
          resources:
          - fenceagentsremediations/finalizers
          verbs:
          - update
        - apiGroups:
          - fence-agents-remediation.medik8s.io
          resources:
          - fenceagentsremediations/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: fence-agents-remediation-controller-manager
      deployments:
      - label:
          app.kubernetes.io/name: fence-agents-remediation-operator
          control-plane: controller-manager
        name: fence-agents-remediation-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/name: fence-agents-remediation-operator
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                app.kubernetes.io/name: fence-agents-remediation-operator
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: quay.io/brancz/kube-rbac-proxy:v0.14.4
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                env:
                - name: DEPLOYMENT_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: quay.io/medik8s/fence-agents-remediation-operator:latest
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              priorityClassName: system-cluster-critical
              securityContext:
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              serviceAccountName: fence-agents-remediation-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: fence-agents-remediation-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - medik8s
  - fencing
  - auto-healing
  - recovery
  - high-availability
  - fence-agents
  - fence-agents-remediation
  - remediation
  - far
  - baremetal
  links:
  - name: Fence Agents Remediation
    url: https://medik8s.io
  - name: Source Code
    url: https://github.com/medik8s/fence-agents-remediation
  maintainers:
  - email: medik8s@googlegroups.com
    name: Medik8s Team
  maturity: alpha
  minKubeVersion: 1.24.0
  provider:
    name: Medik8s
    url: https://github.com/medik8s
  version: 0.0.1
